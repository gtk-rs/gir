var searchIndex = new Map(JSON.parse('[["gir",{"t":"PPKGMNNHNNHHHNNN","n":["CheckGirFile","Config","OptionStr","RunKind","as_str_ref","borrow","borrow_mut","build_config","from","into","main","print_usage","run_check","try_from","try_into","type_id"],"q":[[0,"gir"],[16,"core::option"],[17,"alloc::string"],[18,"core::result"],[19,"getopts"],[20,"core::any"]],"i":"l0``b11`11```111","f":"````{{{d{b}}}{{h{{d{f}}}}}}{d{{d{c}}}{}}{{{d{j}}}{{d{jc}}}{}}{{}{{A`{ln}}}}{cc{}}{{}c{}}{{}{{A`{Abn}}}}{{{d{f}}Ad}Ab}{{{d{f}}}{{A`{Abn}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{dAf}","D":"d","p":[[10,"OptionStr",0],[1,"reference"],[1,"str"],[6,"Option",16],[0,"mut"],[6,"RunKind",0],[5,"String",17],[6,"Result",18],[1,"unit"],[5,"Options",19],[5,"TypeId",20]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA4AAgAAAAgACwAFAA=="}],["libgir",{"t":"FPPFEPPGCOEONNNNNNNOENNNHOONOOONNNNOOOONNCNNNNNNNOOONNNNNNNOCONOONOONOENONOOOOENONONNNNNNNNNNNNCOOFENNCCCCCCOCNOOCCNNNNNNCOONNCCCOCCNHCCOCCCCOCCHCCCCCCCCCNCNNCPFGFFPPFNNOONNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNOONHHHIFHNNOOONNNONNOONOOOOOONNNONHFNNNNNHNNNNNFHNNOONNONONNONOPGPPPPPPNNNNNNNNNNNNNNNNNNNOOFNNNNNOONOHONNNNOOHHFNNNNNOONOHONNNNOOFPPFFFPPPPPPFGHNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNOOOONNNNNNONOOOOOOOONNNNNNNOOONNNNNNOONNNNNNOONNNNNNOOOOOOOOOOOOOOOOOOOFFFHOOOONNNNNNOOOOONNNNNNNOOOOONOOOOHHOHNNNNNNOOOOOONNNNHOONOOOOOOOOOOOOONNOONNONNNNNNNNNOOOOFNNNNNNNNOONNNNOFFFNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNFNNOONNONNONOONNOONNNOOOSFSFINNNNONNNNOONNNONOOHOOONNNNNNOPPPPPPFGPONNNNOOOOOHNNNNNNNNNONNNNNNOONHOONHNNOONNOOONOOONONNNNNNOOPPFGPPPPGPPHNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNHFHNNOONNOOOHNOOOOONNONOOFONNOOONNONNOONOHNNNNPPGPNNNNNNNNNNNNPPPPPPGNNNNNNNNNNNNNNNNNNNNFHOONNNNNONNNNOONNNNPPPPIFFGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPGPNNNNNNNNNNNNNNNNNNNNNNFOHNNOOONNONOOONNNOFINNNNNNNNNNNPPPPPFGPFPPFGPHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNHOOHHFFNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNPFPFFFGPHNNNNNNNNNNOONNNNNNNNNNNNNNNONONNNNNNNNNNNNOONNNNNNOOONONOOONNNNNOOONNNNNONNNNNOOONNNNNFIHNNOONNNOONNONOOOOOONNNHNOOOPPPPPPGNNNNNNNNNNNNNNNNNOOOKKKKKKMMMMMMHHFPPPGPFPPPPPPFPPGFPPFPPPFPGFPPPPPFPPPGPPPSSPPFPPPPPPFPFPPSFFPFPPPPPPFPPPFGGPPFPPFPPPPPPPFPPPGGPFPPPPPPPPPPPFPPPPPNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOONONNNNNNNNNNOOOOOOOOOONNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNOOOOOOOOOONNNNNNOOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNONONNNNNNNNNONNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOONNNONOOOOOONNNNNNNNNNONNOOOONONONNOOOOOONOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOOOOOOOOOOOOOOOONNOHH","n":["Config","DisplayNotBound","Doc","Env","Library","Normal","Sys","WorkMode","analysis","","analysis_run","auto_path","borrow","","","borrow_mut","","","check_disable_format","class_hierarchy","class_hierarchy_run","clone","clone_into","clone_to_uninit","codegen_generate","concurrency","config","default","deprecate_by_min_version","disable_format","doc_target_path","eq","equivalent","","","external_docs_url","external_libraries","extra_versions","feature_dependencies","filter_version","find_ext_library","fmt","","","","from","","","from_str","generate_safety_asserts","girs_dirs","girs_version","into","","","is_generate_rust_files","is_normal","is_too_low_version","is_totally_deprecated","lib_version_overrides","library","","library_full_name","library_name","library_version","main_sys_crate_name","make_backup","min_cfg_version","min_required_version","namespaces","namespaces_run","new","objects","resolve_type_ids","show_statistics","single_version_file","split_build_rs","symbols","symbols_run","sys_crate_import","target_path","to_owned","trust_return_value_nullability","try_from","","","try_into","","","type_","type_id","","","type_status","type_status_sys","update_version","use_gi_docgen","work_mode","Analysis","Parameter","borrow","borrow_mut","bounds","c_type","child_properties","class_builder","class_hierarchy","constants","","conversion_type","default","enum_imports","enumerations","enums","ffi_type","find_enum_by_function","find_flag_by_function","find_global_function","find_object_by_function","find_object_by_virtual_method","find_record_by_function","flags","","flags_imports","fmt","from","function_parameters","functions","general","global_functions","imports","info_base","into","is_gpointer","namespaces","object","objects","out_parameters","properties","record","record_type","records","ref_mode","return_value","run","rust_type","safety_assertion_mode","signals","signatures","special_functions","supertypes","symbols","trampoline_parameters","trampolines","try_from","try_from_glib","try_into","type_id","types","AsRef","Bound","BoundType","Bounds","CallbackInfo","IsA","NoWrapper","PropertyBound","add_for_parameter","add_parameter","alias","","borrow","","","","","borrow_mut","","","","","bound_name","bound_type","callback_modified","callback_type","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","default","eq","","equivalent","","","","","","error_parameters","fmt","","","","","from","","","","","get","get_parameter_bound","get_to_glib_extra","has_alias","into","","","","","is_empty","iter","iter_lifetimes","need_isa","parameter_name","success_parameters","to_owned","","","","","try_from","","","","","try_into","","","","","type_for","type_id","","","","","type_str","","update_imports","implements_c_type","is_mut_ptr","rustify_pointers","ChildProperties","ChildProperty","analyze","borrow","borrow_mut","bounds","child_name","child_type","clone","clone_into","clone_to_uninit","doc_hidden","fmt","from","get_out_ref_mode","getter_name","into","name","nullable","prop_name","set_in_ref_mode","set_params","to_glib_extra","to_owned","try_from","try_into","typ","type_id","analyze","Info","borrow","borrow_mut","fmt","from","into","run","subtypes","supertypes","try_from","try_into","type_id","Info","analyze","borrow","borrow_mut","cfg_condition","deprecated_version","fmt","from","glib_name","into","name","try_from","try_into","typ","type_id","version","Borrow","ConversionType","Direct","Option","Pointer","Result","Scalar","Unknown","borrow","borrow_mut","can_use_to_generate","clone","clone_into","clone_to_uninit","default","eq","equivalent","","","fmt","from","into","of","to_owned","try_from","try_into","type_id","err_type","ok_type","Info","borrow","borrow_mut","default","fmt","from","full_name","functions","into","name","new","specials","try_from","try_into","type_","type_id","","visibility","ffi_type","used_ffi_type","Info","borrow","borrow_mut","default","fmt","from","full_name","functions","into","name","new","specials","try_from","try_into","type_","type_id","","visibility","CParameter","IntoRaw","Length","Parameter","Parameters","RustParameter","ToGlibBorrow","ToGlibDirect","ToGlibPointer","ToGlibScalar","ToGlibUnknown","ToSome","Transformation","TransformationType","analyze","analyze_return","borrow","","","","","","borrow_mut","","","","","","c_parameters","c_type","caller_allocates","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","default","destroy_index","direction","fmt","","","","","","from","","","","","","from_parameter","from_return_value","ind_c","","ind_rust","instance_parameter","into","","","","","","is_error","is_to_glib","lib_par","move_","name","","nullable","ref_mode","rust_parameters","scope","set_to_glib_extra","to_owned","","","","","","transfer","transformation_type","transformations","try_from","","","","","","try_from_glib","","try_into","","","","","","typ","","type_id","","","","","","user_data_index","array_length_name","array_length_type","array_name","explicit_target_type","in_trait","instance_parameter","move_","name","","","","needs_into","nullable","","pointer_cast","ref_mode","to_glib_extra","transfer","AsyncFuture","AsyncTrampoline","Info","analyze","assertion","","async","async_future","borrow","","","borrow_mut","","","bound_name","bounds","callback_type","callbacks","cfg_condition","clone","","clone_into","","clone_to_uninit","","codegen_name","commented","deprecated_version","destroys","doc_hidden","doc_ignore_parameters","doc_link","doc_struct_name","doc_trait_name","error_parameters","ffi_ret","find_function","find_index_to_ignore","finish_func_name","finish_function_name","fmt","","","from","","","func_name","generate_doc","get_property","glib_name","has_error_parameter","hidden","into","","","is_async_finish","is_carray_with_direct_elements","is_method","","is_special","kind","name","","","new_name","not_version","ns_id","output_params","outs","parameters","remove_params","ret","set_property","should_be_doc_linked","should_docs_be_generated","status","success_parameters","to_owned","","trampoline","try_from","","","try_into","","","type_id","","","type_name","unsafe_","version","visibility","StatusedTypeId","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","name","status","to_owned","try_from","try_into","type_id","","ImportConditions","Imports","ImportsWithDefault","add","add_defined","add_used_type","add_used_type_with_version","add_used_types","add_with_constraint","add_with_version","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","cmp","compare","constraints","default","","deref","deref_mut","drop","eq","equivalent","","","fmt","","from","","","into","","","iter","new","partial_cmp","to_owned","","try_from","","","try_into","","","type_id","","","version","with_defaults","with_defined","InfoBase","borrow","borrow_mut","cfg_condition","concurrency","constructors","default","deprecated_version","fmt","from","full_name","functions","","imports","into","methods","name","specials","try_from","try_into","type_id","","version","visibility","INTERNAL","Info","MAIN","Namespace","NsId","borrow","","borrow_mut","","crate_name","fmt","","from","","glib_ns_id","higher_crate_name","index","into","","is_glib_crate","main","name","package_names","run","shared_libs","symbol_prefixes","sys_crate_name","try_from","","try_into","","type_id","","versions","Builder","ClassExt","ClassExtManual","Ext","ExtManual","Impl","Info","LocationInObject","VirtualExt","base","borrow","","borrow_mut","","builder_postprocess","builder_properties","c_class_type","c_type","child_properties","class","clone","clone_into","clone_to_uninit","default","deref","eq","equivalent","","","final_type","fmt","","from","","function_location","generate_doc_link_info","generate_trait","get_type","has_action_signals","has_builder_properties","has_constructors","has_functions","has_signals","interface","into","","is_fundamental","is_interface","need_generate_inherent","need_generate_trait","notify_signals","properties","ref_fn","should_generate_impl_block","signals","signatures","supertypes","to_owned","trait_name","try_from","","try_into","","type_id","","unref_fn","virtual_methods","CheckError","Combined","Info","Mode","None","Normal","Optional","ReturnResult","ThrowFunctionReturnStrategy","Throws","Void","analyze","borrow","","","borrow_mut","","","can_as_return","clone","","clone_into","","clone_to_uninit","","default","","","eq","","equivalent","","","","","","fmt","","","from","","","into","","","is_empty","iter","mode","params","to_owned","","try_from","","","try_into","","","type_id","","","use_function_return_for_result","Property","analyze","borrow","borrow_mut","bounds","deprecated_version","fmt","from","func_name","func_name_alias","get_out_ref_mode","get_property_ref_modes","into","is_get","name","nullable","set_bound","set_in_ref_mode","try_from","try_into","typ","type_id","var_name","version","Info","base","borrow","borrow_mut","boxed_inline","clear_function_expression","copy_into_function_expression","default","deref","derives","fmt","from","glib_get_type","init_function_expression","into","is_boxed","new","try_from","try_into","type_","type_id","AutoBoxed","Boxed","RecordType","Refcounted","borrow","borrow_mut","eq","equivalent","","","from","into","of","try_from","try_into","type_id","ByRef","ByRefConst","ByRefFake","ByRefImmut","ByRefMut","None","RefMode","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","equivalent","","","fmt","from","from_str","into","is_ref","of","to_owned","try_from","try_into","type_id","without_unneeded_mut","Info","analyze","base_tid","bool_return_is_error","borrow","borrow_mut","clone","clone_into","clone_to_uninit","commented","default","fmt","from","into","nullable_return_is_error","parameter","to_owned","try_from","try_into","type_id","Err","Ignored","Mismatch","Ok","Result","RustType","RustTypeBuilder","TypeError","Unimplemented","alter_type","as_str","borrow","","","borrow_mut","","","builder","callback_parameters_config","clone","","clone_into","","clone_to_uninit","","concurrency","default","direction","eq","","equivalent","","","","","","fmt","","from","","","","","into","","","into_used_types","nullable","ref_mode","scope","to_owned","","try_build","try_build_param","try_from","","","try_from_glib","try_into","","","try_new","type_id","","","used_types","InMainThread","None","NotInitialized","SafetyAssertionMode","Skip","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","eq","equivalent","","","fmt","","from","from_str","into","is_none","of","to_owned","to_string","try_from","try_into","type_id","Info","action_emit_name","analyze","borrow","borrow_mut","connect_name","deprecated_version","doc_hidden","fmt","from","generate_doc","into","is_detailed","signal_name","trampoline","try_from","try_into","type_id","version","Signature","Signatures","borrow","borrow_mut","fmt","from","has_for_property","has_in_deps","into","new","try_from","try_into","type_id","Compare","Copy","Display","Equal","Free","FunctionInfo","FunctionType","Hash","Infos","Ref","StaticStringify","TraitInfo","Type","Unref","analyze_imports","borrow","","","","","borrow_mut","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","cmp","","compare","","default","eq","","equivalent","","","","","","extract","first_parameter_mut","fmt","","","","","from","","","","","from_str","functions","glib_name","has_trait","into","","","","","partial_cmp","","to_owned","","","","traits","traits_mut","try_from","","","","","try_into","","","","","type_","type_id","","","","","unhide","version","","analyze","dependencies","Info","Symbol","borrow","","borrow_mut","","by_c_name","by_c_name_mut","by_tid","clone","clone_into","clone_to_uninit","crate_name","default","fmt","","from","","full_rust_name","into","","is_rust_prelude","make_trait","make_trait_method","name","owner_name","parent","run","to_owned","try_from","","try_into","","type_id","","Borrow","CParameter","None","Parameters","RustParameter","Transformation","TransformationType","TreePath","analyze","borrow","","","","","borrow_mut","","","","","c_parameters","c_type","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","conversion_type","default","direction","fmt","","","","","from","","","","","from_str","get","ind_c","ind_rust","into","","","","","is_real_gpointer","name","","","new","nullable","prepare_transformation","ref_mode","","rust_parameters","to_owned","","","","","transfer","transformation","transformations","try_from","","","","","try_from_glib","try_into","","","","","typ","","","type_id","","","","","Trampoline","Trampolines","analyze","borrow","borrow_mut","bound_name","bounds","clone","clone_into","clone_to_uninit","concurrency","destroy_index","fmt","from","inhibit","into","is_notify","name","nullable","parameters","ret","scope","to_owned","try_from","try_into","type_error","type_id","type_name","user_data_index","version","Default","NotImplemented","Option","OptionMandatory","Result","ResultInfallible","TryFromGlib","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","fmt","from","from_parameter","from_return_value","from_type_defaults","into","or_type_defaults","to_owned","try_from","try_into","type_id","err_type","ok_type","","DerivesCopy","ImplementsDebug","IsExternal","IsIncomplete","IsPtr","IsVolatile","derives_copy","implements_debug","is_external","is_incomplete","is_ptr","is_volatile","check_fmt","format","Alias","","Array","Async","Basic","","Bitfield","","Bool","Boolean","CArray","Call","Char","Class","","ClassMethod","Concurrency","Constant","Constructor","Container","Custom","","DevT","Double","Enumeration","","ErrorDomain","Field","Filename","FixedArray","Float","Forever","Full","Function","","","","FunctionKind","GidT","Global","HashTable","INTERNAL_NAMESPACE","INTERNAL_NAMESPACE_NAME","In","InOut","Infallible","Int","Int16","Int32","Int64","Int8","IntPtr","Interface","","Library","List","Long","MAIN_NAMESPACE","Mandatory","Member","Method","Namespace","None","","","","","Notified","Nullable","OffT","OsString","Out","Parameter","ParameterDirection","ParameterScope","PidT","Pointer","Property","PtrArray","Quark","Record","","Return","SList","SSize","Send","SendSync","Short","Signal","Size","SockLenT","TimeT","Transfer","Type","","TypeId","UChar","UInt","UInt16","UInt32","UInt64","UInt8","UIntPtr","ULong","UShort","UidT","UniChar","Union","","Unsupported","Utf8","VarArgs","VirtualMethod","add_constant","add_function","add_glib_priority","add_namespace","add_type","array_length","","async_func","bits","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","c_array","c_class_type","","c_identifier","","","","c_includes","c_type","","","","","","","","","","caller_allocates","clone","","","","","","","","","","","clone_into","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","closure","cmp","","","","","","","","","","compare","","","","","","","","","","constants","construct","construct_only","container","conversion_type","default","","","","","","","","","","deprecated_version","","","","","","","","","","deref","","","deref_mut","derives_copy","","","","","","","","","destroy","direction","disguised","doc","","","","","","","","","","","","","","","doc_deprecated","","","","","","","","","","","","eq","","","","","","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","error_domain","fields","","","final_type","find_c_array","find_namespace","find_or_stub_type","find_type","finish_func","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_str","","","","","full_name","function","functions","","","","","","","","get_deprecated_version","get_glib_name","get_inner_type","get_name","get_property","getter","glib_get_type","","","","","","glib_name_index","gtype_struct_for","has_copy","has_destroy","has_free","has_ref","has_unref","hash","id","identifier_prefixes","implements","implements_debug","index","","instance_parameter","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","is_abstract","","is_action","is_async","is_basic","is_basic_type","","is_bitfield","is_call","is_class","is_crate","is_detailed","is_enumeration","is_error","is_external","","","","","is_final_type","is_forever","is_function","is_fundamental","","is_glib_crate","is_in","is_incomplete","","","","","","","","","is_interface","is_none","is_out","is_ptr","","is_volatile","kind","members","","name","","","","","","","","","","","","","","","","namespace","namespace_mut","namespace_types","namespaces","new","ns_id","nullable","package_names","parameters","","parent","partial_cmp","","","","","","","","","","pointer","postprocessing","preprocessing","prerequisites","private","properties","","read_file","readable","record","ref_fn","register_version","requires_conversion","ret","","scope","set_property","setter","shared_library","show_non_bound_types","signals","","status","symbol_prefix","","","","","","symbol_prefixes","sync_func","target_c_type","throws","tid_bool","tid_c_bool","tid_filename","tid_none","tid_os_string","tid_uint32","tid_utf8","to_owned","","","","","","","","","","","to_string","transfer","","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","typ","","","","","type_","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_mut","type_struct","","types","","union","unref_fn","value","","version","","","","","","","","","","versions","virtual_methods","","visit_functions_mut","","writable","apply_config","check_function_real_version"],"q":[[0,"libgir"],[98,"libgir::analysis"],[159,"libgir::analysis::bounds"],[259,"libgir::analysis::c_type"],[262,"libgir::analysis::child_properties"],[290,"libgir::analysis::class_builder"],[291,"libgir::analysis::class_hierarchy"],[303,"libgir::analysis::constants"],[319,"libgir::analysis::conversion_type"],[346,"libgir::analysis::conversion_type::ConversionType"],[348,"libgir::analysis::enums"],[366,"libgir::analysis::ffi_type"],[368,"libgir::analysis::flags"],[386,"libgir::analysis::function_parameters"],[505,"libgir::analysis::function_parameters::TransformationType"],[523,"libgir::analysis::functions"],[616,"libgir::analysis::general"],[632,"libgir::analysis::imports"],[691,"libgir::analysis::info_base"],[715,"libgir::analysis::namespaces"],[749,"libgir::analysis::object"],[816,"libgir::analysis::out_parameters"],[877,"libgir::analysis::properties"],[901,"libgir::analysis::record"],[922,"libgir::analysis::record_type"],[938,"libgir::analysis::ref_mode"],[965,"libgir::analysis::return_value"],[985,"libgir::analysis::rust_type"],[1051,"libgir::analysis::safety_assertion_mode"],[1078,"libgir::analysis::signals"],[1097,"libgir::analysis::signatures"],[1110,"libgir::analysis::special_functions"],[1208,"libgir::analysis::supertypes"],[1210,"libgir::analysis::symbols"],[1245,"libgir::analysis::trampoline_parameters"],[1340,"libgir::analysis::trampolines"],[1370,"libgir::analysis::try_from_glib"],[1394,"libgir::analysis::try_from_glib::TryFromGlib"],[1397,"libgir::analysis::types"],[1409,"libgir::fmt"],[1411,"libgir::library"],[2205,"libgir::update_version"],[2207,"libgir::config::config"],[2208,"libgir::config::work_mode"],[2209,"libgir::env"],[2210,"core::option"],[2211,"core::fmt"],[2212,"core::result"],[2213,"alloc::string"],[2214,"core::convert"],[2215,"core::any"],[2216,"core::ops::function"],[2217,"core::marker"],[2218,"core::slice::iter"],[2219,"alloc::vec"],[2220,"core::iter::traits::iterator"],[2221,"alloc::boxed"],[2222,"core::borrow"],[2223,"core::iter::traits::collect"],[2224,"core::cmp"],[2225,"alloc::vec::into_iter"],[2226,"alloc::borrow"],[2227,"alloc::collections::btree::map"],[2228,"libgir::config::signals"],[2229,"std::path"],[2230,"core::hash"]],"i":"`j0``00``l`f02102101`222`0120002222000000`021021200002122110`100010001`0000001`1020021021102111`00``Bl0``````0`000``000000`0000```0``0```0````0````````````0`00`Dj````00`D`0DlDn312Dh142301022042301423014230134244422204230142301133442301333420423014230142301342301213``````Eh000000000000000000000000``F`0000`00000``Ff0000000000000Fl`0000000000000000000000000AAd0`Bn00000000`0000000```Cj00000000`0000000`Gl0```000000```GfGhGjDd4Gn43215044113215043215043215044113215043215043320013215041531211141532150410432150431321504213215041AAf00AAh000AAjAAl2AAn1133333````HdC`00Hb210210101102020211111111120``0`0210211111010211`021102111101111111120210210210211111`Hl00000000000000```Ed000000Ib1Hn1202020200002011100002012012022020120120120022`If0000000000000000000000`````AbIh1011010010100011`1111010101Ij00000``0Cl101000000`1110011110101000000`000`10000000000001010101000JbJd``0001`01`10J`210`21212121021222111210210210000021210210210```El00000000`000000000000`Cn00000000000000`0000Jn0`0000000000000Jh00000`00000000000000000000``In00000000000000000G`Kh01````0Kb0Kf210211021212101021222111210211102110002100021002110211Lb00`00000000000000000000000`Jf`0000000000000000``Lf0000000000Lj0000``0`0Ln``1`1Ll1M`Lh423104231423142314343043444333`24231042310402042310434231004231042310142310`21````MfMd10000111111010110111111`1101010N``0````0`MjMlMnMh4321040232104321043210410332104321044011321042321030310321041103210433210432132104```Nd000000000000000000000`0000L`00000`00000000000000000AB`0ABb``````NfNhNjNlNnO````Bh0Kn`1`1Ol0210`2Oj``0Nb`422`4``24230`1A@n5`325``K`0`444444`6`64```3`205Df56`551```55`72`7175005`555``5`55555555555`75554Bd0000A@hGdDb275:JjOfOh;7<BfOnFhA@l=FnGbJl<A@`Ej=<LdA@bA@dA@fBhA@jBdNbK`KnJjOfOhOjDfOlBfOnFhA@lA@nFnGbJlA@hA@`EjGdDbLdA@bA@dA@fBhA@jBd254OnFhA@l:41FnGbJlA@hA@`EjGd?>0NbK`KnJjOfOhOjDfOlBf:9876543210:9876543210::0OnFnGbJlA@`DbA@bA@dA@f9876543210A@jEj0Bh3K`KnDf?;A@h;986FhA@lFnGbJl:?Ld?>JjOfOh2OlBfOn7<A@`DbA@dBhGd0<5FhA@lFnGbJlA@h:Ej7:LdA@b;A@j?987653=21<0NbK`KnJjOfOhOjDfOlBfOnFnGbJlA@`DbA@bA@dA@fBhNb00K`00Kn00Jj00Of00Oh00Oj00Df00Ol00Bf00On00Fn00Gb00Jl00A@`00Db00A@b00A@d00A@f00Bh00865220Bd005NbK`KnJjOfOhOjDfOlBfOnFhA@lA@nFnGbJlA@hA@`EjGdDbLdA@bA@dA@fBh0A@jBdNbK`KnJjOfOhOjDfOlBfOnFhA@lA@nFnGbJlA@hA@`EjGdDbLdA@bA@dA@fBhA@jBdNbK`KnOjDfBf88FnGbJlA@`?>;<<<<DbEj5432A@bA@d?55555588?0A@hA@jBdGdNbK`KnJjOfOhOjDfOlBfOnFhA@lA@nFnGbJlA@hA@`EjGdDbLdA@bA@dA@fBhA@jBd246Kn3Bf4414284:On?=75525573K`Ol32JlA@hA@`?<::74511?FnGb7FhA@l32654EjGdDbLdA@bA@dA@fA@jBd0000Bf827640On>=JlA@`:8761448A@h985=Bh96Ol=<>=?87;:A@lFnGb76>=;Db90:::::::NbK`KnJjOfOhOjDf<BfGd?Ej1:9876543?2OnFhA@lA@nFnGbJlA@hA@`9:DbLdA@bA@dA@fBhA@jBdNbK`KnJjOfOhOjDfOlBfOnFhA@lA@nFnGbJlA@hA@`EjGdDbLdA@bA@dA@fBhA@jBdOnFh=;:2NbK`KnJjOfOhOjDfOlBf;:A@lA@nFnGbJlA@hA@`EjGdDbLdA@bA@dA@fBhA@jBd0540124FhA@l10FnGbJl><;:96:976>``","f":"````````````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{df}}}h}``{{{b{j}}}j}{{b{b{dc}}}h{}}{bh}{{{b{l}}}h}``{{}j}```{{{b{j}}{b{j}}}n}{{b{b{c}}}n{}}00````{{{b{f}}{A`{`}}}{{A`{`}}}}{{{b{f}}{b{Ab}}}{{A`{{b{`}}}}}}`{{{b{f}}{b{dAd}}}Af}{{{b{j}}{b{dAd}}}Af}{{{b{l}}{b{dAd}}}Af}{cc{}}00{{{b{Ah}}}{{Aj{jc}}}{}}```{{}c{}}00{jn}0{{{b{l}}{A`{Al}}{A`{`}}}n}0```{{{b{f}}}An}``{{{b{l}}}{{b{Ah}}}}``{{{b{f}}{b{l}}{A`{Al}}}{{A`{`}}}}``{{ce{b{{B`{An}}}}ccccnnn}{{Aj{fAn}}}{{Bb{{A`{{b{Ah}}}}}}}{{Bb{{A`{j}}}}}}`{{{b{df}}{b{Bd}}}h}`````{{{b{l}}Bf}An}`{bc{}}`{c{{Aj{e}}}{}{}}00{{}{{Aj{c}}}{}}00{{{b{l}}Bf}{{b{Bh}}}}{bBj}00```````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}````````{{}Bl}````{{{b{Bl}}{b{l}}ce}{{A`{{Cb{{b{Bn}}{b{C`}}}}}}}{{Cf{{b{Bn}}}{{Cd{n}}}}Ch}{{Cf{{b{C`}}}{{Cd{n}}}}Ch}}{{{b{Bl}}{b{l}}ce}{{A`{{Cb{{b{Cj}}{b{C`}}}}}}}{{Cf{{b{Cj}}}{{Cd{n}}}}Ch}{{Cf{{b{C`}}}{{Cd{n}}}}Ch}}{{{b{Bl}}{b{l}}c}{{A`{{b{C`}}}}}{{Cf{{b{C`}}}{{Cd{n}}}}Ch}}{{{b{Bl}}{b{l}}ce}{{A`{{Cb{{b{Cl}}{b{C`}}}}}}}{{Cf{{b{Cl}}}{{Cd{n}}}}Ch}{{Cf{{b{C`}}}{{Cd{n}}}}Ch}}0{{{b{Bl}}{b{l}}ce}{{A`{{Cb{{b{Cn}}{b{C`}}}}}}}{{Cf{{b{Cn}}}{{Cd{n}}}}Ch}{{Cf{{b{C`}}}{{Cd{n}}}}Ch}}```{{{b{Bl}}{b{dAd}}}Af}{cc{}}``````{{}c{}}{{{b{Ah}}}n}``````````{{{b{dl}}}h}`````````{c{{Aj{e}}}{}{}}`{{}{{Aj{c}}}{}}?`````````{{{b{dD`}}{b{l}}{b{Db}}{b{Dd}}nDf{b{{B`{{b{`}}}}}}}{{Cb{{A`{An}}{A`{Dh}}}}}}{{{b{dD`}}{b{Ah}}{b{Ah}}Djn}h}``{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000````{{{b{Dj}}}Dj}{{{b{Dl}}}Dl}{{{b{D`}}}D`}{{{b{Dh}}}Dh}{{{b{Dn}}}Dn}{{b{b{dc}}}h{}}0000{bh}0000{{}D`}{{{b{Dj}}{b{Dj}}}n}{{{b{Dl}}{b{Dl}}}n}{{b{b{c}}}n{}}00000`{{{b{Dj}}{b{dAd}}}Af}{{{b{Dl}}{b{dAd}}}Af}{{{b{D`}}{b{dAd}}}Af}{{{b{Dh}}{b{dAd}}}Af}{{{b{Dn}}{b{dAd}}}Af}{cc{}}0000{{{b{l}}Bf}{{A`{Dn}}}}{{{b{D`}}{b{Ah}}}{{A`{{b{Dl}}}}}}{{{b{Dj}}nnn}An}{{{b{Dj}}}n}{{}c{}}0000{{{b{D`}}}n}{{{b{D`}}}{{E`{Dl}}}}{{{b{D`}}}{{E`{Eb}}}}4``{bc{}}0000{c{{Aj{e}}}{}{}}0000{{}{{Aj{c}}}{}}0000{{{b{l}}Bf}{{A`{Dj}}}}{bBj}0000``{{{b{D`}}{b{dEd}}}h}{{{b{l}}Bf{b{Ah}}}n}{{{b{Ah}}}n}{{{b{Ah}}}{{Cb{AnAn}}}}``{{{b{l}}{A`{{b{`}}}}Bf{b{dEd}}}Ef}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}```{{{b{Eh}}}Eh}{{b{b{dc}}}h{}}{bh}`{{{b{Eh}}{b{dAd}}}Af}{cc{}}``{{}c{}}``````{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}`{bBj}{{{b{l}}{b{{B`{Ej}}}}Bf{b{`}}{b{dEd}}}{{En{{Cb{{En{El}}Bf}}}}}}`<;{{{b{F`}}{b{dAd}}}Af}76{{{b{Bd}}}F`}{{{b{F`}}Bf}{{Fd{Fb}}}}{{{b{F`}}Bf}{{b{{B`{Bf}}}}}}765`{{{b{l}}{b{{B`{c}}}}{b{`}}}{{En{Ff}}}{{Fj{Fh}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}``{{{b{Ff}}{b{dAd}}}Af}>`=`;:`9`````````21{{{b{Fl}}}n}{{{b{Fl}}}Fl}{{b{b{dc}}}h{}}{bh}{{}Fl}{{{b{Fl}}{b{Fl}}}n}{{b{b{c}}}n{}}00{{{b{Fl}}{b{dAd}}}Af}{cc{}}{{}c{}}{{{b{l}}Bf}Fl}{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bBj}```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}Bn}{{{b{Bn}}{b{dAd}}}Af}:``9`{{{b{l}}{b{`}}{b{dEd}}}{{A`{Bn}}}}`76{{{b{Bn}}{b{Bd}}}{{b{Fn}}}}6``{{{b{l}}Bf{b{Ah}}}G`}{{{b{l}}Bf{b{Ah}}}{{A`{An}}}}`76{{}Cj}{{{b{Cj}}{b{dAd}}}Af}{cc{}}``{{}c{}}`{{{b{l}}{b{`}}{b{dEd}}}{{A`{Cj}}}}`?>{{{b{Cj}}{b{Bd}}}{{b{Gb}}}}>````````````````{{{b{l}}{b{{B`{Gd}}}}{b{{B`{{b{`}}}}}}nnn}Gf}{{{b{dGf}}{b{l}}{b{{A`{Gh}}}}}h}??????>>>>>>```{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Dd}}}Dd}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{Gf}}}Gf}{{b{b{dc}}}h{}}00000{bh}00000{{}Gf}``{{{b{Gh}}{b{dAd}}}Af}{{{b{Gj}}{b{dAd}}}Af}{{{b{Dd}}{b{dAd}}}Af}{{{b{Gl}}{b{dAd}}}Af}{{{b{Gn}}{b{dAd}}}Af}{{{b{Gf}}{b{dAd}}}Af}{cc{}}00000{{{b{l}}{b{Gd}}{b{{B`{{b{`}}}}}}}Gh}0````{{}c{}}00000`{{{b{Gl}}}n}````````{{{b{dGl}}{b{Ah}}}h}{bc{}}00000```{c{{Aj{e}}}{}{}}00000``{{}{{Aj{c}}}{}}00000``{bBj}00000``````````````````````{{{b{l}}{b{{B`{c}}}}{A`{Bf}}nn{b{`}}{b{dEd}}{A`{{b{dH`}}}}{A`{{b{{B`{Bf}}}}}}}{{En{C`}}}{{Fj{Db}}}}````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00`````{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{b{b{dc}}}h{}}0{bh}0{{{b{C`}}}{{b{Ah}}}}`````{{{b{C`}}{A`{{b{Ah}}}}{A`{{b{Ah}}}}n}An}````{{{b{l}}{b{Ah}}}{{A`{{b{Db}}}}}}{{c{A`{{b{Gd}}}}}{{A`{Hf}}}{{Hj{}{{Hh{{b{Gd}}}}}}}}`{{{b{Ah}}}An}{{{b{Hb}}{b{dAd}}}Af}{{{b{Hd}}{b{dAd}}}Af}{{{b{C`}}{b{dAd}}}Af}{cc{}}00``````{{}c{}}00{{{b{C`}}{b{l}}}n}{{{b{l}}Bf}n}``{{{b{C`}}}n}`````````````22``{bc{}}0`{c{{Aj{e}}}{}{}}00{{}{{Aj{c}}}{}}00{bBj}00`````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Hl}}}Hl}{{b{b{dc}}}h{}}{bh}{{{b{Hl}}{b{dAd}}}Af}>=``9876````{{{b{dEd}}{b{Ah}}}h}00{{{b{dEd}}{b{Ah}}{A`{`}}}h}{{{b{dEd}}{b{{B`{An}}}}}h}{{{b{dEd}}{b{Ah}}{A`{`}}{A`{{b{Ah}}}}}h}2999888{{{b{Ed}}}Ed}{{{b{Hn}}}Hn}8877{{{b{Hn}}{b{Hn}}}I`}{{b{b{c}}}I`{}}`{{}Ed}{{}Hn}{{{b{Ib}}}{{b{c}}}{}}{{{b{dIb}}}{{b{dc}}}{}}{{{b{dIb}}}h}{{{b{Hn}}{b{Hn}}}n}{{b{b{c}}}n{}}00{{{b{Ed}}{b{dAd}}}Af}{{{b{Hn}}{b{dAd}}}Af}{cc{}}00{{}c{}}00{{{b{Ed}}}{{Id{{Cb{{b{An}}{b{Hn}}}}}}}}{{{b{Bd}}}Ed}{{{b{Hn}}{b{Hn}}}{{A`{I`}}}}{bc{}}0{c{{Aj{e}}}{}{}}00{{}{{Aj{c}}}{}}00{bBj}00`{{{b{dEd}}{A`{`}}{b{{A`{An}}}}}Ib}{{{b{Bd}}{b{Ah}}}Ed}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}``{{{b{If}}}{{En{{b{C`}}}}}}{{}If}`{{{b{If}}{b{dAd}}}Af}?`2``>2``987````````4433`{{{b{Ab}}{b{dAd}}}Af}{{{b{Ih}}{b{dAd}}}Af}{cc{}}0``{{{b{Ih}}Al}{{b{Ab}}}}{{}c{}}0`{{{b{Ih}}}{{b{Ab}}}}``{{{b{Bd}}}Ih}```{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bBj}0```````````>>==`````{{{b{l}}{b{`}}{b{{B`{Bf}}}}}{{A`{Cl}}}}{{{b{Ij}}}Ij}{{b{b{dc}}}h{}}{bh}{{}Cl}{{{b{Cl}}}{{b{If}}}}{{{b{Ij}}{b{Ij}}}n}{{b{b{c}}}n{}}00`{{{b{Ij}}{b{dAd}}}Af}{{{b{Cl}}{b{dAd}}}Af}{cc{}}0{{{b{Cl}}{b{C`}}}Ij}{{{b{Cl}}{b{C`}}}{{Cb{{Il{Ah}}{Il{Ah}}}}}}``{{{b{Cl}}}n}{{{b{{B`{{Cb{{En{El}}Bf}}}}}}}n}``1>{{}c{}}0``22```2```{bc{}}`{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bBj}0`````````````{{{b{l}}{b{Db}}{b{{B`{Dd}}}}{b{In}}{b{{B`{{b{`}}}}}}}{{Cb{J`n}}}}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{l}}{b{Gd}}}n}{{{b{Jb}}}Jb}{{{b{Jd}}}Jd}{{b{b{dc}}}h{}}0{bh}0{{}Jb}{{}Jd}{{}J`}{{{b{Jb}}{b{Jb}}}n}{{{b{Jd}}{b{Jd}}}n}{{b{b{c}}}n{}}00000{{{b{Jb}}{b{dAd}}}Af}{{{b{Jd}}{b{dAd}}}Af}{{{b{J`}}{b{dAd}}}Af}{cc{}}00{{}c{}}00{{{b{J`}}}n}{{{b{J`}}}{{E`{Gh}}}}``{bc{}}0{c{{Aj{e}}}{}{}}00{{}{{Aj{c}}}{}}00{bBj}00{{{b{l}}Bf{b{Ah}}{b{{B`{{b{`}}}}}}}n}`{{{b{l}}{b{{B`{Ej}}}}{b{{B`{{b{Ej}}}}}}Bfnn{b{`}}{b{dEd}}{b{H`}}{b{{B`{Bf}}}}{b{{B`{C`}}}}}{{Cb{{En{El}}{En{Jf}}}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}``{{{b{El}}{b{dAd}}}Af}<```{{{b{l}}{b{Ej}}}{{Cb{JhJhJj}}}}<`````87`6````32```{{}Cn}{{{b{Cn}}}{{b{If}}}}`{{{b{Cn}}{b{dAd}}}Af}{cc{}}``{{}c{}}`{{{b{l}}{b{`}}}{{A`{Cn}}}}>={{{b{Cn}}{b{Bd}}}{{b{Jl}}}}=````:9{{{b{Jn}}{b{Jn}}}n}{{b{b{c}}}n{}}0054{{{b{Jl}}}Jn}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bBj}```````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Jh}}}Jh}{{b{b{dc}}}h{}}{bh}{{{b{Jh}}{b{Jh}}}n}:::{{{b{Jh}}{b{dAd}}}Af}{cc{}}{{{b{Ah}}}{{Aj{Jhc}}}{}}{{}c{}}{Jhn}{{{b{l}}BfK`}Jh}{bc{}}?>={{{b{l}}{b{Gd}}nn}Jh}`{{{b{l}}{b{`}}{b{Db}}Bf{b{{B`{{b{`}}}}}}{b{d{En{An}}}}{b{dEd}}}In}``>={{{b{In}}}In}<;`{{}In}{{{b{In}}{b{dAd}}}Af}:8``5{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bBj}`````````{{Kbc}Kb{{Kd{An}{{Cd{An}}}}}}{{{b{Kb}}}{{b{Ah}}}}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{l}}Bf}Kf}{{Kf{b{{B`{`}}}}}Kf}{{{b{Kh}}}Kh}{{{b{Kb}}}Kb}{{b{b{dc}}}h{}}0{bh}0{{KfDf}Kf}{{}Kb}{{KfK`}Kf}{{{b{Kh}}{b{Kh}}}n}{{{b{Kb}}{b{Kb}}}n}{{b{b{c}}}n{}}00000{{{b{Kh}}{b{dAd}}}Af}{{{b{Kb}}{b{dAd}}}Af}{cc{}}0{cKbKj}1{Klc{}}{{}c{}}00{Kb{{En{An}}}}{{KfJj}Kf}{{KfJh}Kf}{{KfKn}Kf}{bc{}}0{KfG`}0{c{{Aj{e}}}{}{}}00{{Kf{b{L`}}}Kf}{{}{{Aj{c}}}{}}00{{{b{l}}Bf}G`}{bBj}00{{{b{Kb}}}{{b{{En{An}}}}}}`````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Lb}}}Lb}{{b{b{dc}}}h{}}{bh}{{}Lb}{{{b{Lb}}{b{Lb}}}n}{{b{b{c}}}n{}}00{{{b{Lb}}{b{dAd}}}Af}0{cc{}}{{{b{Ah}}}{{Aj{LbAn}}}}{{}c{}}{Lbn}{{{b{l}}n{b{Gf}}}Lb}{bc{}}{bAn}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bBj}``{{{b{l}}{b{{B`{Ld}}}}Bfnn{b{`}}{b{dEd}}}{{En{Jf}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}```{{{b{Jf}}{b{dAd}}}Af}=`;```654```21{{{b{Lf}}{b{dAd}}}Af}>{{{b{l}}{b{Ah}}nBf{b{H`}}{b{{B`{Bf}}}}}{{Cb{n{A`{`}}}}}}{{{b{Lf}}{b{l}}{b{Ah}}{b{{B`{Bf}}}}}{{Cb{n{A`{`}}}}}}>{{{b{Db}}}Lf}:98``````````````{{{b{Lh}}{b{dEd}}}h}7777766666{{{b{Lj}}}Lj}{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{M`}}}M`}{{b{b{dc}}}h{}}000{bh}000{{{b{Lj}}{b{Lj}}}I`}{{{b{Ln}}{b{Ln}}}I`}{{b{b{c}}}I`{}}0{{}Lh}{{{b{Lj}}{b{Lj}}}n}{{{b{Ln}}{b{Ln}}}n}{{b{b{c}}}n{}}00000{{{b{d{B`{C`}}}}{b{Bh}}{b{`}}}Lh}`{{{b{Lj}}{b{dAd}}}Af}{{{b{Ll}}{b{dAd}}}Af}{{{b{Ln}}{b{dAd}}}Af}{{{b{M`}}{b{dAd}}}Af}{{{b{Lh}}{b{dAd}}}Af}{cc{}}0000{{{b{Ah}}}{{Aj{Ljc}}}{}}{{{b{Lh}}}{{b{{Mb{AnM`}}}}}}`{{{b{Lh}}Lj}n}{{}c{}}0000{{{b{Lj}}{b{Lj}}}{{A`{I`}}}}{{{b{Ln}}{b{Ln}}}{{A`{I`}}}}{bc{}}000{{{b{Lh}}}{{b{{Mb{LjLl}}}}}}{{{b{dLh}}}{{b{d{Mb{LjLl}}}}}}{c{{Aj{e}}}{}{}}0000{{}{{Aj{c}}}{}}0000`{bBj}0000{{{b{d{B`{C`}}}}{b{Lh}}Lj}h}``{{{b{l}}Bf{A`{`}}{b{dEd}}n}{{En{Hl}}}}{{{b{l}}Bf}{{En{Bf}}}}``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Md}}{b{Ah}}}{{A`{{b{Mf}}}}}}{{{b{dMd}}{b{Ah}}}{{A`{{b{dMf}}}}}}{{{b{Md}}Bf}{{A`{{b{Mf}}}}}}{{{b{Mf}}}Mf}{{b{b{dc}}}h{}}{bh}{{{b{Mf}}}{{A`{{b{Ah}}}}}}{{}Mf}{{{b{Mf}}{b{dAd}}}Af}{{{b{Md}}{b{dAd}}}Af}{cc{}}0{{{b{Mf}}}An}{{}c{}}0{{{b{Mf}}}n}{{{b{dMf}}{b{Ah}}}h}0{{{b{Mf}}}{{b{Ah}}}}94{{{b{Bd}}{b{Ih}}}Md}{bc{}}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bBj}0````````{{{b{l}}{b{{B`{Gd}}}}Bf{b{{B`{{b{`}}}}}}{A`{{b{{En{`}}}}}}}Mh}{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000``{{{b{Mj}}}Mj}{{{b{Ml}}}Ml}{{{b{Mn}}}Mn}{{{b{Mh}}}Mh}{{{b{N`}}}N`}{{b{b{dc}}}h{}}0000{bh}0000`{{}Mh}`{{{b{Mj}}{b{dAd}}}Af}{{{b{Ml}}{b{dAd}}}Af}{{{b{Mn}}{b{dAd}}}Af}{{{b{Mh}}{b{dAd}}}Af}{{{b{N`}}{b{dAd}}}Af}{cc{}}0000{{{b{Ah}}}{{Aj{N`c}}}{}}{{{b{Mh}}Hf}{{A`{{b{Mn}}}}}}``{{}c{}}0000{{{b{Ml}}{b{l}}}n}```{HfMh}`{{{b{dMh}}{b{l}}BfAnAnK`NbJjJhFl}Mn}```{bc{}}0000```{c{{Aj{e}}}{}{}}0000`{{}{{Aj{c}}}{}}0000```{bBj}0000``{{{b{l}}{b{Ld}}Bfnn{b{{B`{{b{`}}}}}}{b{`}}{b{d{En{An}}}}{A`{`}}}{{Aj{Nd{En{An}}}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}``{{{b{Nd}}}Nd}{{b{b{dc}}}h{}}{bh}``{{{b{Nd}}{b{dAd}}}Af}{cc{}}`?``````;:9{{{b{l}}{b{Gd}}}{{A`{{b{Ah}}}}}}9``````````76{{{b{L`}}}L`}54{{}L`}{{{b{L`}}{b{dAd}}}Af}4{{{b{l}}Bf{b{{B`{{b{`}}}}}}}L`}0{{{b{l}}Bf}L`}{{}c{}}{{{b{L`}}{b{l}}Bf}{{Il{L`}}}}{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bBj}`````````{{{b{Nf}}{b{Bd}}}n}{{{b{Nh}}{b{Bd}}}n}{{{b{Nj}}{b{Bd}}}n}{{{b{Nl}}{b{Bd}}}n}{{{b{Nn}}}n}{{{b{O`}}}n}{{}n}{{{b{Ob}}}h}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{dBd}}OdFh}h}{{{b{dBd}}OdDb}h}{{{b{dBd}}j}h}{{{b{dBd}}{b{Ah}}}Od}{{{b{dBd}}Od{b{Ah}}Bh}Bf}````{b{{b{c}}}{}}0000000000000000000000000000{{{b{d}}}{{b{dc}}}{}}0000000000000000000000000000{{{b{dBd}}Bf{A`{Od}}{A`{An}}}Bf}``````````````````{{{b{Nb}}}Nb}{{{b{K`}}}K`}{{{b{Kn}}}Kn}{{{b{Jj}}}Jj}{{{b{Of}}}Of}{{{b{Oh}}}Oh}{{{b{Oj}}}Oj}{{{b{Df}}}Df}{{{b{Ol}}}Ol}{{{b{Bf}}}Bf}{{{b{Gd}}}Gd}{{b{b{dc}}}h{}}0000000000{bh}0000000000`{{{b{Bf}}{b{Bf}}}I`}{{{b{On}}{b{On}}}I`}{{{b{Fn}}{b{Fn}}}I`}{{{b{Gb}}{b{Gb}}}I`}{{{b{Jl}}{b{Jl}}}I`}{{{b{A@`}}{b{A@`}}}I`}{{{b{Db}}{b{Db}}}I`}{{{b{A@b}}{b{A@b}}}I`}{{{b{A@d}}{b{A@d}}}I`}{{{b{A@f}}{b{A@f}}}I`}{{b{b{c}}}I`{}}000000000```{{{b{dBd}}{b{Ah}}{En{Bf}}}{{A`{Bf}}}}`{{}K`}{{}Kn}{{}Df}{{}Bf}{{}Jl}{{}A@h}{{}A@`}{{}A@b}{{}A@d}{{}A@j}``````````{{{b{Jj}}}{{b{n}}}}{{{b{Of}}}{{b{n}}}}{{{b{Oh}}}{{b{n}}}}{{{b{dJj}}}{{b{dn}}}}{{b{b{Bd}}}n}00000000``````````````````````````````{{{b{Nb}}{b{Nb}}}n}{{{b{K`}}{b{K`}}}n}{{{b{Kn}}{b{Kn}}}n}{{{b{Jj}}{b{Jj}}}n}{{{b{Of}}{b{Of}}}n}{{{b{Oh}}{b{Oh}}}n}{{{b{Oj}}{b{Oj}}}n}{{{b{Df}}{b{Df}}}n}{{{b{Ol}}{b{Ol}}}n}{{{b{Bf}}{b{Bf}}}n}{{{b{On}}{b{On}}}n}{{{b{Fn}}{b{Fn}}}n}{{{b{Gb}}{b{Gb}}}n}{{{b{Jl}}{b{Jl}}}n}{{{b{A@`}}{b{A@`}}}n}{{{b{Db}}{b{Db}}}n}{{{b{A@b}}{b{A@b}}}n}{{{b{A@d}}{b{A@d}}}n}{{{b{A@f}}{b{A@f}}}n}{{{b{Bh}}{b{Bh}}}n}{{b{b{c}}}n{}}00000000000000000000000000000000000000000000000000000000000`````{{{b{Bd}}Bf{A`{Od}}}Bf}{{{b{Bd}}{b{Ah}}}{{A`{Od}}}}{{{b{dBd}}Od{b{Ah}}}Bf}{{{b{Bd}}Od{b{Ah}}}{{A`{Bf}}}}`{{{b{Nb}}{b{dAd}}}Af}{{{b{K`}}{b{dAd}}}Af}{{{b{Kn}}{b{dAd}}}Af}{{{b{Jj}}{b{dAd}}}Af}{{{b{Of}}{b{dAd}}}Af}{{{b{Oh}}{b{dAd}}}Af}{{{b{Oj}}{b{dAd}}}Af}{{{b{Df}}{b{dAd}}}Af}{{{b{Ol}}{b{dAd}}}Af}{{{b{Bf}}{b{dAd}}}Af}{{{b{On}}{b{dAd}}}Af}{{{b{Fh}}{b{dAd}}}Af}{{{b{A@l}}{b{dAd}}}Af}{{{b{A@n}}{b{dAd}}}Af}{{{b{Fn}}{b{dAd}}}Af}{{{b{Gb}}{b{dAd}}}Af}{{{b{Jl}}{b{dAd}}}Af}{{{b{A@h}}{b{dAd}}}Af}{{{b{A@`}}{b{dAd}}}Af}{{{b{Ej}}{b{dAd}}}Af}{{{b{Gd}}{b{dAd}}}Af}{{{b{Db}}{b{dAd}}}Af}{{{b{Ld}}{b{dAd}}}Af}{{{b{A@b}}{b{dAd}}}Af}{{{b{A@d}}{b{dAd}}}Af}{{{b{A@f}}{b{dAd}}}Af}{{{b{Bh}}{b{dAd}}}Af}0{{{b{A@j}}{b{dAd}}}Af}{{{b{Bd}}{b{dAd}}}Af}{cc{}}0000000000000000000000000000{{{b{Ah}}}{{Aj{NbAn}}}}{{{b{Ah}}}{{Aj{K`An}}}}{{{b{Ah}}}{{Aj{KnAn}}}}{{{b{Ah}}}{{Aj{OjAn}}}}{{{b{Ah}}}{{Aj{DfAn}}}}{{Bf{b{Bd}}}An}{{{b{dBd}}Db}Bf}{{{b{Bh}}}{{b{{B`{Db}}}}}}```````{{{b{Bh}}}{{A`{`}}}}{{{b{Bh}}}{{A`{{b{Ah}}}}}}{{{b{Bh}}{b{l}}}{{A`{{Cb{{b{Bh}}Od}}}}}}{{{b{Bh}}}An}``````````{{{b{Jl}}}n}0000{{{b{Bf}}{b{dc}}}hAA`}```{{{b{A@h}}{b{Bd}}}n}```{{}c{}}0000000000000000000000000000{{{b{Bh}}}n}``{Knn}1{{Bf{b{l}}}n}{{{b{Bh}}{b{l}}}n}323{{{b{Bd}}{b{Ah}}}n}`4`{{{b{On}}{b{Bd}}}n}{{{b{Jl}}{b{Bd}}}n}{{{b{A@`}}{b{Bd}}}n}{{{b{A@d}}{b{Bd}}}n}{{{b{Bh}}{b{Bd}}}n}9899`{{{b{Bd}}}n}{K`n}{{{b{Ol}}{b{Bd}}}n}{{{b{Bf}}{b{Bd}}}n}87?6{{{b{Db}}{b{Bd}}}n}65>=3{{{b{On}}}n}{{{b{A@h}}}n}0```````````````````{{{b{Bd}}Od}{{b{A@j}}}}{{{b{dBd}}Od}{{b{dA@j}}}}{{{b{Bd}}Od}{{Fd{Fb}}}}`{{{b{Ah}}}Bd}``````{{{b{Bf}}{b{Bf}}}{{A`{I`}}}}{{{b{On}}{b{On}}}{{A`{I`}}}}{{{b{Fn}}{b{Fn}}}{{A`{I`}}}}{{{b{Gb}}{b{Gb}}}{{A`{I`}}}}{{{b{Jl}}{b{Jl}}}{{A`{I`}}}}{{{b{A@`}}{b{A@`}}}{{A`{I`}}}}{{{b{Db}}{b{Db}}}{{A`{I`}}}}{{{b{A@b}}{b{A@b}}}{{A`{I`}}}}{{{b{A@d}}{b{A@d}}}{{A`{I`}}}}{{{b{A@f}}{b{A@f}}}{{A`{I`}}}}`{{{b{dBd}}{b{f}}}h}{{{b{dBd}}j}h}````{{{b{dBd}}{b{{B`{c}}}}{b{d{En{An}}}}}{{Aj{hAn}}}{{AAb{Ob}}}}`{{{b{dBd}}JlOd}Bf}``{{{b{Ol}}}n}``````{{{b{Bd}}{b{l}}}h}`````````````{{}Bf}000000{bc{}}0000000000{bAn}``{c{{Aj{e}}}{}{}}0000000000000000000000000000{{}{{Aj{c}}}{}}0000000000000000000000000000`````{{{b{Bd}}Bf}{{b{Bh}}}}{bBj}0000000000000000000000000000{{{b{dBd}}Bf}{{b{dBh}}}}``{{{b{Bd}}}{{Fd{Fb}}}}`{{{b{dBd}}A@`Od}Bf}````````````````{{{b{dBh}}{b{dc}}}n`}{{{b{dA@j}}{b{dc}}}n`}`{{{b{dBd}}{b{f}}}h}{{{b{dBd}}}h}","D":"ANf","p":[[1,"reference"],[0,"mut"],[5,"Config",0,2207],[1,"unit"],[6,"WorkMode",0,2208],[5,"Env",0,2209],[1,"bool"],[6,"Option",2210],[5,"Namespace",715],[5,"Formatter",2211],[8,"Result",2211],[1,"str"],[6,"Result",2212],[8,"NsId",715],[5,"String",2213],[1,"slice"],[10,"Into",2214],[5,"Library",1411],[5,"TypeId",1411],[6,"Type",1411],[5,"TypeId",2215],[5,"Analysis",98],[5,"Info",348],[5,"Info",523],[1,"tuple"],[17,"Output"],[10,"Fn",2216],[10,"Copy",2217],[5,"Info",368],[5,"Info",749],[5,"Info",901],[5,"Bounds",159],[5,"Function",1411],[5,"CParameter",386],[6,"Concurrency",1411],[5,"CallbackInfo",159],[6,"BoundType",159],[5,"Bound",159],[5,"PropertyBound",159],[5,"Iter",2218],[1,"char"],[5,"Imports",632],[8,"ChildProperties",262],[5,"ChildProperty",262],[5,"Property",1411],[5,"Property",877],[5,"Vec",2219],[5,"Info",291],[10,"Iterator",2220],[5,"Box",2221],[5,"Info",303],[5,"Constant",1411],[10,"Borrow",2222],[6,"ConversionType",319],[5,"Enumeration",1411],[8,"Result",985],[5,"Bitfield",1411],[5,"Parameter",1411],[5,"Parameters",386],[5,"Parameter",386],[5,"RustParameter",386],[6,"TransformationType",386],[5,"Transformation",386],[8,"Signatures",1097],[5,"AsyncTrampoline",523],[5,"AsyncFuture",523],[1,"usize"],[17,"Item"],[10,"IntoIterator",2223],[5,"StatusedTypeId",616],[5,"ImportConditions",632],[6,"Ordering",2224],[5,"ImportsWithDefault",632],[5,"IntoIter",2225],[5,"InfoBase",691],[5,"Info",715],[6,"LocationInObject",749],[6,"Cow",2226],[5,"Info",965],[5,"Info",816],[6,"ThrowFunctionReturnStrategy",816],[6,"Mode",816],[5,"Info",1078],[6,"RefMode",938],[5,"Nullable",1411],[5,"Record",1411],[6,"RecordType",922],[6,"ParameterDirection",1411],[5,"RustType",985],[10,"FnOnce",2216],[5,"RustTypeBuilder",985],[6,"TypeError",985],[10,"ToString",2213],[1,"never"],[6,"ParameterScope",1411],[6,"TryFromGlib",1370],[6,"SafetyAssertionMode",1051],[5,"Signal",1411],[5,"Signature",1097],[5,"Infos",1110],[6,"Type",1110],[5,"TraitInfo",1110],[6,"FunctionType",1110],[5,"FunctionInfo",1110],[5,"BTreeMap",2227],[5,"Info",1210],[5,"Symbol",1210],[5,"Parameters",1245],[5,"RustParameter",1245],[5,"CParameter",1245],[5,"Transformation",1245],[6,"TransformationType",1245,2228],[6,"Transfer",1411],[5,"Trampoline",1340],[10,"DerivesCopy",1397],[10,"ImplementsDebug",1397],[10,"IsExternal",1397],[10,"IsIncomplete",1397],[10,"IsPtr",1397],[10,"IsVolatile",1397],[5,"Path",2229],[1,"u16"],[5,"Mandatory",1411],[5,"Infallible",1411],[6,"FunctionKind",1411],[6,"Basic",1411],[5,"Alias",1411],[5,"Union",1411],[5,"Interface",1411],[5,"Class",1411],[5,"Custom",1411],[5,"Field",1411],[5,"Namespace",1411],[5,"Member",1411],[6,"ErrorDomain",1411],[10,"Hasher",2230],[10,"AsRef",2214],[15,"Result",346],[15,"Length",505],[15,"ToGlibPointer",505],[15,"ToGlibDirect",505],[15,"ToGlibScalar",505],[15,"ToGlibUnknown",505],[15,"Result",1394],[15,"ResultInfallible",1394]],"r":[[0,2207],[3,2209],[4,1411],[7,2208],[99,386],[1251,2228]],"b":[[1066,"impl-Debug-for-SafetyAssertionMode"],[1067,"impl-Display-for-SafetyAssertionMode"],[1848,"impl-Display-for-Type"],[1849,"impl-Debug-for-Type"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKwHZQAAAAsADQAWACUACAAxAAMAOAAXAFEALAB/AAUAhgAjAKsALADdAAMA5gAtABUBAQAYAQ8AKgEMADgBAAA6AQcARwEMAFYBCwBjAQEAZgEPAHcBAQB6AToAtgEGAMMBBQDPASkA+gErACcCCwA0AgIAOgIEAEMCCgBPAiAAcgIHAHsCAACAAgAAgwIZAKMCFQC6AgIAvgIDAMMCFADaAgIA3wIVAPYCFwASAwcAHAMFACQDCgAwAycAXgMWAHYDAwB7AxUAkgMBAJUDBQCdAwAAnwMFAKcDFAC9AwAAvwMSANQDBQDbAwEA3gMAAOADCgDsAxMAAgQAAAQEAAAIBA4AGAQUAC4EAAAwBA8AQQQAAEMECwBQBAEAUwQ8AJUEAwCeBCwAzQQAANAEAADTBDYADwUDABgFMQBLBQAATQUKAFoFDgBqBQIAbgUHAHwFBQCEBQIAiAUGAJAFEgCkBR8AxQUBAMgFBQDPBW8AQAYrAG0GOQCoBgAAqgaSAFoHKQChBwUAqAc2AOAHEQDzBwgA/QeiAA=="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[771,42731]}